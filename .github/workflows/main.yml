name: Spring Boot CI/CD with Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up JDK 21 for Spring Boot
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Cache Maven dependencies to speed up builds
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Build the Spring Boot project with Maven
    - name: Build with Maven
      run: mvn clean package -DskipTests

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Build Docker image
    - name: Build Docker image
      run: |
        docker buildx build --platform linux/amd64 -t spring-boot-api:latest -o type=docker,dest=image.tar .

    # Copy Docker image and Docker Compose file to server
    - name: Copy files to Server
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        echo "$SSH_KEY" > ssh_key
        chmod 600 ssh_key
        scp -o StrictHostKeyChecking=no -i ssh_key image.tar ubuntu@$SERVER_IP:/home/ubuntu/image.tar
        scp -o StrictHostKeyChecking=no -i ssh_key docker-compose.yml ubuntu@$SERVER_IP:/home/ubuntu/docker-compose.yml

    # Load image and run Docker Compose on server
    - name: Deploy to Server
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        echo "$SSH_KEY" > ssh_key
        chmod 600 ssh_key
        ssh -o StrictHostKeyChecking=no -i ssh_key ubuntu@$SERVER_IP << 'EOF'
          docker load -i /home/ubuntu/image.tar
          docker-compose -f /home/ubuntu/docker-compose.yml down
          docker-compose -f /home/ubuntu/docker-compose.yml up -d
          rm /home/ubuntu/image.tar
        EOF
